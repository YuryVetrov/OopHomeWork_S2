Семейное дерево:

Address.java - Поля опроса для каждого участника дерева
Assignment2.java - Класс, содержащий основную функцию. Запустить нужно этот файл!
FamilyMember.java - Заполнение полей степеней родства каждого члена семьи
FamilyTree.java - Построение генеалогического дерева
TreeGUI.java - Приветствие, кнопки, основное наполнение, диалоговые окна

Приложение генеалогическое древо управляет списком связанных людей.

Предположения
Пользователь будет использовать генеалогическое древо, взаимодействуя с мышью и клавиатурой.

Генеалогическое древо будет подчиняться обычным семьям (мать-отец-дети)

Требования и спецификации
Приложение семейного древа требует, чтобы пользователь управлял списком связанных людей. 
Спецификации приложения заключаются в том, что оно должно быть построено с использованием Java и должно 
использовать графические средства для взаимодействия с данными. Открытие существующего дерева, создание нового 
дерева и просмотр одного человека и ближайших родственников в любой момент времени — основные требования, которые 
необходимо выполнить. Приложение с графическим интерфейсом должно было использовать jFileChooser, обработку исключений 
и сериализацию.

Гид пользователя
Компиляция приложения
Командная строка
Для компиляции приложения в командной строке предполагается, что Java 1.8 установлена ​​по пути на вашем компьютере. 
Затем вам нужно использовать командную строку для «cd» в каталог, содержащий файлы .java, он находится в 
Assignment 2\src\assignment\pkg2\. Чтобы скомпилировать все файлы, используйте команду «javac *.java», затем запустите 
команду «java Assignment2» в приложении с графическим интерфейсом.

Использование приложения
Чтобы использовать приложение, взаимодействуйте с доступными кнопками и меню в графическом интерфейсе.

Структура и дизайн
Подход к проектированию был модульным, отделяющим графический интерфейс от внутренней логики. 
Стратегия выполнения этого задания заключалась в том, чтобы сначала разработать конкретные классы, такие как 
«Член семьи», «Семейное древо» и «Адрес», и протестировать их с помощью текстовых методов, чтобы убедиться, что 
функции работают должным образом. Это позволило более плавно интегрировать графический интерфейс с базовыми классами. 
